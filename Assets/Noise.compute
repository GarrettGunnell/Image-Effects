#pragma kernel WhiteNoise
#pragma kernel Bayer
#pragma kernel TileBayer

#include "Random.cginc"

RWTexture2D<float4> Result;

float _Seed;

[numthreads(8,8,1)]
void WhiteNoise(uint3 id : SV_DispatchThreadID) {
    initRand((_Seed + id.x) * (_Seed * id.y) + (_Seed * id.x) * (_Seed + id.y));
    Result[id.xy] = randValue();
}

uint _BayerLevel;
uint _BayerDimension;
float _Scalar;

uint BayerCoordinate(uint n, uint xdiv, uint ydiv, uint i, uint j) {
    uint2x2 bayerBase = {{0, 2}, {3, 1}};
    uint constants[12];

    uint value = bayerBase[i % 2][j % 2];
    while (n > 1) {
        uint x = i < xdiv ? 0 : 1;
        uint y = j < ydiv ? 0 : 1;
        
        xdiv = i < xdiv ? xdiv - (xdiv * 0.5) : xdiv + (xdiv * 0.5);
        ydiv = j < ydiv ? ydiv - (ydiv * 0.5) : ydiv + (ydiv * 0.5);

        constants[n - 2] = bayerBase[x][y];
        n--;
    }
    
    for (uint x = 0; x < _BayerLevel - 1; ++x) {
        value = 4 * value + constants[x];
    }
            
    return value;
}

[numthreads(8, 8, 1)]
void Bayer(uint3 id : SV_DispatchThreadID) {
    Result[id.xy] = (BayerCoordinate(_BayerLevel, _BayerDimension * 0.5, _BayerDimension * 0.5, id.x, id.y) + 1) * _Scalar;
}

RWTexture2D<float4> _BayerTex;

[numthreads(8, 8, 1)]
void TileBayer(uint3 id : SV_DispatchThreadID) {
    Result[id.xy] = _BayerTex[uint2(id.x % _BayerDimension, id.y % _BayerDimension)];
}